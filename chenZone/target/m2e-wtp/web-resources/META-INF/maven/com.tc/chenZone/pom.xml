   <!-- 第一行是XML头，指定了该xml文档的版本和编码方式 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion><!-- 指定了当前POM模型的版本，对于Maven2及Maven 3来说，它只能是4.0.0。 -->

	<!-- groupId，artifactId和version三行。这三个元素定义了一个项目基本的坐标 -->
	<groupId>com.tc</groupId><!--定义了项目属于哪个组 -->
	<artifactId>chenZone</artifactId><!--定义了当前Maven项目在组中唯一的ID -->
	<packaging>war</packaging><!--指定打包类型，可以是war，jar，pom,ear等形式 -->
	<version>0.0.1-SNAPSHOT</version><!--指定了项目当前的版本 SNAPSHOT意为快照，说明该项目还处于开发中，是不稳定的版本。 -->

	<name>chenZone</name><!--项目的名称, Maven产生的文档用 -->
	<url>chenZone</url> <!--项目主页的URL, Maven产生的文档用 -->

	<!-- 合成多个模块：一个项目有多个模块，也叫做多重模块，或者合成项目 <modules> <module>nonbankcard-common</module> 
		<module>nonbankcard-facade</module> <module>nonbankcard-core</module> <module>nonbankcard-hessian</module> 
		</modules> -->
	<!-- 父项目的坐标。如果项目中没有规定某个元素的值.父项目的packaging节点值是pom <parent> <groupId></groupId> 
		<artifactId></artifactId> <version></version> 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。 
		默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom， 其次在文件系统的这个位置（relativePath位置）， 
		然后在本地仓库 最后在远程仓库寻找父项目的pom。 <relativePath></relativePath> </parent> -->
	<!-- 该元素下可以包含多个dependency元素以声明项目的依赖,前面我们提到groupId、artifactId和version是任何一个Maven项目最基本的坐标 -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.2.8.RELEASE</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.2.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>3.2.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.2.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.23</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
    		<groupId>commons-codec</groupId>
    		<artifactId>commons-codec</artifactId>
    		<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.25</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.11</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.11</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.8</version>
		</dependency>
		<!-- 映入JSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<!-- 格式化对象，方便输出日志 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.41</version>
		</dependency>
		<!-- logback -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>0.9.28</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.28</version>
		</dependency>
		<!-- slf4j日志 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.6</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.6</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1.2</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.1.2</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<!-- 功能集标签，在此标签下面可以定义一系列的插件以实现功能 主要用于编译设置，一般包含两种标签：resource和plugins，前者用于排除或包含某些资源文件，后者用来设置插件。 
		例如：在用Junit4写测试程序，用到了@test等注解， 但是由于Maven的核心插件之一compiler插件默认只支持编译java1.3，因此需要配置该插件使其支持java5，需要修改pom文件如下： -->
	<!-- <build> -->
	<!-- 当前项目的 <artifactId>标示 -->
	<!-- <finalName>chenblog</finalName> -->
	<!-- Maven的编译插件默认是JDK 1.4的编译级别，为了让Maven的编译插件使用JDK5.0的编译级别，需要对编译插件作如下配置 -->
	<!-- <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> 
		<version>2.0</version> <configuration> <source>1.6</source> <target>1.6</target> 
		</configuration> </plugin> </plugins> </build> -->
</project>