<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tc.iDao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.tc.model.Comment" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="ArticleId" property="articleid" jdbcType="INTEGER" />
    <result column="UserId" property="userid" jdbcType="CHAR" />
    <result column="CreatTime" property="creattime" jdbcType="TIMESTAMP" />
    <result column="Author" property="author" jdbcType="CHAR" />
    <result column="UpCommentId" property="upcommentid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tc.model.Comment" extends="BaseResultMap" >
    <result column="Content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, ArticleId, UserId, CreatTime, Author, UpCommentId
  </sql>
  <sql id="Blob_Column_List" >
    Content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.tc.model.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tc.model.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tc.model.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tc.model.Comment" >
    insert into comment (Id, ArticleId, UserId, 
      CreatTime, Author, UpCommentId, 
      Content)
    values (#{id,jdbcType=INTEGER}, #{articleid,jdbcType=INTEGER}, #{userid,jdbcType=CHAR}, 
      #{creattime,jdbcType=TIMESTAMP}, #{author,jdbcType=CHAR}, #{upcommentid,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tc.model.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="articleid != null" >
        ArticleId,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="creattime != null" >
        CreatTime,
      </if>
      <if test="author != null" >
        Author,
      </if>
      <if test="upcommentid != null" >
        UpCommentId,
      </if>
      <if test="content != null" >
        Content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=CHAR},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        #{author,jdbcType=CHAR},
      </if>
      <if test="upcommentid != null" >
        #{upcommentid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tc.model.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.articleid != null" >
        ArticleId = #{record.articleid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        UserId = #{record.userid,jdbcType=CHAR},
      </if>
      <if test="record.creattime != null" >
        CreatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.author != null" >
        Author = #{record.author,jdbcType=CHAR},
      </if>
      <if test="record.upcommentid != null" >
        UpCommentId = #{record.upcommentid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        Content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update comment
    set Id = #{record.id,jdbcType=INTEGER},
      ArticleId = #{record.articleid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=CHAR},
      CreatTime = #{record.creattime,jdbcType=TIMESTAMP},
      Author = #{record.author,jdbcType=CHAR},
      UpCommentId = #{record.upcommentid,jdbcType=INTEGER},
      Content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set Id = #{record.id,jdbcType=INTEGER},
      ArticleId = #{record.articleid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=CHAR},
      CreatTime = #{record.creattime,jdbcType=TIMESTAMP},
      Author = #{record.author,jdbcType=CHAR},
      UpCommentId = #{record.upcommentid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tc.model.Comment" >
    update comment
    <set >
      <if test="articleid != null" >
        ArticleId = #{articleid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        UserId = #{userid,jdbcType=CHAR},
      </if>
      <if test="creattime != null" >
        CreatTime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        Author = #{author,jdbcType=CHAR},
      </if>
      <if test="upcommentid != null" >
        UpCommentId = #{upcommentid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        Content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tc.model.Comment" >
    update comment
    set ArticleId = #{articleid,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=CHAR},
      CreatTime = #{creattime,jdbcType=TIMESTAMP},
      Author = #{author,jdbcType=CHAR},
      UpCommentId = #{upcommentid,jdbcType=INTEGER},
      Content = #{content,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tc.model.Comment" >
    update comment
    set ArticleId = #{articleid,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=CHAR},
      CreatTime = #{creattime,jdbcType=TIMESTAMP},
      Author = #{author,jdbcType=CHAR},
      UpCommentId = #{upcommentid,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>