<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tc.iDao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.tc.model.User" >
    <id column="UserId" property="userid" jdbcType="CHAR" />
    <result column="Name" property="name" jdbcType="CHAR" />
    <result column="PassWord" property="password" jdbcType="CHAR" />
    <result column="Type" property="type" jdbcType="INTEGER" />
    <result column="UserCode" property="usercode" jdbcType="CHAR" />
    <result column="Email" property="email" jdbcType="CHAR" />
    <result column="PhoneMunber" property="phonemunber" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UserId, Name, PassWord, Type, UserCode, Email, PhoneMunber
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tc.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where UserId = #{userid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where UserId = #{userid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tc.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tc.model.User" >
    insert into user (UserId, Name, PassWord, 
      Type, UserCode, Email, PhoneMunber
      )
    values (#{userid,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{type,jdbcType=INTEGER}, #{usercode,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{phonemunber,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tc.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        UserId,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="password != null" >
        PassWord,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="usercode != null" >
        UserCode,
      </if>
      <if test="email != null" >
        Email,
      </if>
      <if test="phonemunber != null" >
        PhoneMunber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=CHAR},
      </if>
      <if test="phonemunber != null" >
        #{phonemunber,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tc.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userid != null" >
        UserId = #{record.userid,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        Name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        PassWord = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        Type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.usercode != null" >
        UserCode = #{record.usercode,jdbcType=CHAR},
      </if>
      <if test="record.email != null" >
        Email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.phonemunber != null" >
        PhoneMunber = #{record.phonemunber,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set UserId = #{record.userid,jdbcType=CHAR},
      Name = #{record.name,jdbcType=CHAR},
      PassWord = #{record.password,jdbcType=CHAR},
      Type = #{record.type,jdbcType=INTEGER},
      UserCode = #{record.usercode,jdbcType=CHAR},
      Email = #{record.email,jdbcType=CHAR},
      PhoneMunber = #{record.phonemunber,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tc.model.User" >
    update user
    <set >
      <if test="name != null" >
        Name = #{name,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        PassWord = #{password,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="usercode != null" >
        UserCode = #{usercode,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        Email = #{email,jdbcType=CHAR},
      </if>
      <if test="phonemunber != null" >
        PhoneMunber = #{phonemunber,jdbcType=CHAR},
      </if>
    </set>
    where UserId = #{userid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tc.model.User" >
    update user
    set Name = #{name,jdbcType=CHAR},
      PassWord = #{password,jdbcType=CHAR},
      Type = #{type,jdbcType=INTEGER},
      UserCode = #{usercode,jdbcType=CHAR},
      Email = #{email,jdbcType=CHAR},
      PhoneMunber = #{phonemunber,jdbcType=CHAR}
    where UserId = #{userid,jdbcType=CHAR}
  </update>
</mapper>